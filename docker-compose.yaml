services:

  frontend:
    build: myshop/myshop_front
    env_file:
      - .env
    ports:
      - "8100:80"
    depends_on:
      - web

    #volumes:
    #  - $FRONTEND_PATH:/usr/app/staticfiles
    #command: npm run build

  #web-static:
  #  build: .
  #  env_file:
  #    - .env
  #  volumes:
  #    - ./:/www/
  #    - $FRONTEND_PATH:/www/staticfiles
  #  command: python manage.py collectstatic --noinput
  #  depends_on:
  #    - frontend

  web:
    build: myshop
    env_file:
      - .env
    environment:
      - POSTGRES_USER=$DB_USER
      - POSTGRES_PASSWORD=$DB_PASSWORD
      - POSTGRES_DB=$DB_NAME
      - POSTGRES_HOST=$DB_HOST
      - POSTGRES_PORT=$DB_PORT
    #volumes:
      #- ./:/www/
      #- $MEDIA_PATH:/www/media
      #- $FRONTEND_PATH:/www/staticfiles
    ports:
      - "8000:8000"
    #network_mode: bridge
    depends_on:
    #  - web-static
      - db
    #command: python myshop/manage.py migrate

  #web2:
  #  image: nginx:stable-alpine3.17-slim
  #  ports:
  #    - "8300:80"
  
  db:
    image: postgres:14.0-alpine
    volumes:
     - postgres_data:/var/lib/postgresql/data/
    env_file:
      - .env 
    environment:
      - POSTGRES_USER=$DB_USER
      - POSTGRES_PASSWORD=$DB_PASSWORD
      - POSTGRES_DB=$DB_NAME
    ports:
      - "5432:5432"  

volumes:
  postgres_data:
  #frontend:
 # media: